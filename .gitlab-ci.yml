stages:
  - test
  - build_publish
  - deploy
  - e2e

run_tests:
  stage: test
  image: python:3.9-slim
  before_script:
    - apt-get update && apt-get install make -y
  script:
    - make test

build_&_publish_image:
  stage: build_publish
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
    - apk update && apk add --no-cache aws-cli
    - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 522986700920.dkr.ecr.eu-west-1.amazonaws.com
  script:
    - docker build -t py-demo .
    - docker tag py-demo:latest 522986700920.dkr.ecr.eu-west-1.amazonaws.com/py-demo:latest
    - docker push 522986700920.dkr.ecr.eu-west-1.amazonaws.com/py-demo:latest

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - scp -o StrictHostKeyChecking=no -i $SSH_KEY -r deploy/* $REMOTE_USER@$REMOTE_HOST:~/
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $REMOTE_USER@$REMOTE_HOST "
        aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 522986700920.dkr.ecr.eu-west-1.amazonaws.com &&
        mkdir -p ~/py-demo &&
        mv -f docker-compose.yml nginx.conf  ~/py-demo/ &&
        cd ~/py-demo &&
        docker compose down -v &&
        docker compose up -d"

run_e2e_test:
  stage: e2e
  script:
    - curl REMOTE_HOST
stages:
  - test
  - build
  - publish
  # - deploy

run_tests:
  stage: test
  image: python:3.9-slim
  before_script:
    - apt-get update && apt-get install make -y
  script:
    - make test

build_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - docker build -t py-demo .

publish_image:
  stage: publish
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - apk update && apk add --no-cache aws-cli
    - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 522986700920.dkr.ecr.eu-west-1.amazonaws.com
  script:
    - docker tag py-demo:latest 522986700920.dkr.ecr.eu-west-1.amazonaws.com/py-demo:latest
    - docker push 522986700920.dkr.ecr.eu-west-1.amazonaws.com/py-demo:latest

# deploy:
#   stage: deploy
#   before_script:
#     - chmod 400 $SSH_KEY
#   script:
#     - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@161.35.223.117 "
#         docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
#         docker ps -aq | xargs docker stop | xargs docker rm &&
#         docker run -d -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG"